name: "[github-pages] | pytest-allure-single-test"

on:
  workflow_dispatch:
    inputs:
      test:
        description: 'Test to run: '
        required: true
        default: ''
        type: choice
        options:
        - tests/

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        env:
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

  autotests:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 | Checkout the code
        uses: actions/checkout@v2

      - name: Step 2 | Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: pip
      
      - name: Step 3 | setup chromedriver 
        uses: nanasess/setup-chromedriver@v2
        with:
          chromedriver-version: '108.0.5359.71'
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
      
      - name: Step 4 |  Install google-chrome
        run: |
          VERSION_STRING="112.0.5615.49-1"
          wget "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${VERSION_STRING}_amd64.deb"
          sudo dpkg -i "google-chrome-stable_${VERSION_STRING}_amd64.deb"
          

      - name: Step 5 | print which chromdriver
        run: |
          which chromedriver && chromedriver --version && google-chrome --version
      
      - name: Step 6 | Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Step 7 | Run Test
        run:  |
          if [[ ${{ github.event.inputs.test }} == e2* ]]; then
            python -m pytest tests/${{ github.event.inputs.test }} --dist=loadscope --tx 2*popen//python=python3.8 --alluredir=allure-results
          else 
            python -m pytest tests/${{ github.event.inputs.test }} --alluredir=allure-results
          fi
        continue-on-error: true

      - name: Sstep 8 | Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Step 9 | Create Allure Report 
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 200

      - name: Step 10 | Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.PAGE_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Srtep 11 | Sync for redundancies
        uses: patrickwyler/gcs-bucket-sync-action@1.3
        with:
          secrets: ${{ secrets.GCP_SA_KEY_PROD }}
          bucket: 'allure-report-from-gha'
          exclude: '.*\.md$|\.gitignore$|\.git/.*$|\.github/.*$'

      - name: Step 12 | Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: 'sdasdfdfdsfsdfdsfdfdsfdsfdsfds'
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Deployment URL: url/${{ github.run_number }}\n it may tooke a minutes to displayed the report..."
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
