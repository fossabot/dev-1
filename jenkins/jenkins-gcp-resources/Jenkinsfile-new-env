pipeline {
    /* insert Declarative Pipeline here */
    agent { 
        node ('ansible') 
    }
	parameters { 
		string(name: 'PROJECT', defaultValue: 'project', description: 'Insert the GCP project name to build in.')
		string(name: 'SUB_DM_NAME', defaultValue: '', description: 'Insert the sub-domain name of the env.')
		string(name: 'DM_NAME', defaultValue: 'domain.com', description: 'Insert the domain name for the new env.')
        string(name: 'ZONE', defaultValue: 'domain-ai-zone', description: 'Insert the GCP zone for the env.')
     	string(name: 'ENV_TYPE', defaultValue: '', description: 'Insert env name to build.')
     	string(name: 'REGION', defaultValue: '', description: 'Insert the GCP region to build.')
        string(name: 'COMPOSE_BRANCH', defaultValue: '', description: 'Insert GitHub compose branch repo to build from.')

    }
   	stages {
		stage("Checkout devops repo"){
            steps{
                    echo "$WORKSPACE"
                    sh 'git clone git@github.com:osherlevi7/dev.git'
                    sh "ls -lrt"
            }
        }
		stage ('Create VMs configuration template and group, LB, HC') {
			steps {
				dir("$WORKSPACE/scripts/gcp-infra-scripts") {
				    sh "export ANSIBLE_FORCE_COLOR=true"
                    sh "ls -lrt"
                    sh "./create-full-environment.sh ${PROJECT} ${SUB_DM_NAME} ${DM_NAME} ${ZONE} ${ENV_TYPE} ${REGION} '${COMPOSE_BRANCH}'"
                }   
            }
		}
        stage ('Create Redis') {
			steps {
				dir("$WORKSPACE/scripts/gcp-infra-scripts") {
				    sh "export ANSIBLE_FORCE_COLOR=true"
                    sh "ls -lrt"
                    sh "./create-redis.sh ${PROJECT} ${ENV_TYPE} ${REGION}"
                }   
            }
		}
        stage ('Create SQL DB') {
			steps {
				dir("$WORKSPACE/scripts/gcp-infra-scripts") {
				    sh "export ANSIBLE_FORCE_COLOR=true"
                    sh "ls -lrt"
                    sh "./create-sql.sh ${PROJECT} ${ENV_TYPE} ${REGION} no"
                }   
            }
		}
        stage ('Create the schedulers table for the ENV') {
			steps {
				dir("$WORKSPACE/scripts/gcp-infra-scripts") {
				    sh "export ANSIBLE_FORCE_COLOR=true"
                    sh "ls -lrt"
                    sh "./create-scheduler.sh ${PROJECT} ${SUB_DM_NAME} ${REGION}"
                }   
            }
		}
        stage ('Create PubSub topic for the ENV') {
			steps {
				dir("$WORKSPACE/scripts/gcp-infra-scripts") {
				    sh "export ANSIBLE_FORCE_COLOR=true"
                    sh "ls -lrt"
                    sh "./create-pubsub.sh ${PROJECT} ${ENV_TYPE}"
                }   
            }
		}
	}
	post {
    	always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true)
    	    }
    }
}
